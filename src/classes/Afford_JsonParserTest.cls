@IsTest(SeeAllData = true)
public class Afford_JsonParserTest {
  public static testMethod void testm(){
      list<String> networthAnalysisRecommendList1=new list<String>{'qwe','sdf','cvb'};
          list<String> downPayment1=new list<String>{'fgge','rt','wf'};
        list<String> yearlyListRec1=new list<String>{'wf','wf','gg'};
        list<String> affordResult1=new list<String>{'fef','ff','wq'};
        list<String> downPaymentRec1=new list<String>{'qf','qef','qf'};
      list<String> installmentRec1=new list<String>{'sf','fq','ff'};
     String debtCreatedName1='ggbm';  
         
         list<String> networthAnalysisList1=new list<String>{'kkbj','chhc','xgxh'};
        list<String> monthlyExpenseList1=new list<String>{'vjhv','vhjv','xdx'};
        String buynowMsg1='gjhg';
        list<String> monthlyTermDebtRecommendList1=new list<String>{'fgghh','hgchg','fgv'};
        String topMessage1='';
        list<String> monthlyGoalTargetList1=new list<String>{'sg','dss','dss'};
       list<String> monthName1=new list<String>{'sds','sdg','sggz'};
        list<String> cashAvailableForPurchaseRecommendList1=new list<String>{'sfsg','sgg','fsgw'};
         String resultMessage1='ascx';
        Integer months1=321;
        String affordResultDate1='ackjasj';
       list<String> monthlyIncomeRecommendList1=new list<String>{'ss','qs','ssw'};
         list<String> displayMonthList1=new list<String>{'ss','qs','ssw'};

       list<String> yearlyList1=new list<String>{'ss','qs','ssw'};
     
        String jsonData1='vg';
       list<String> displayMonthRecommendList1=new list<String>{'ss','qs','ssw'};
     
         Integer currentYear1=68;
        list<String> installment1=new list<String>{'ss','qs','ssw'};
        Integer endYear1=2047;
        list<String> monthlySavingRecommendList1=new list<String>{'ss','qs','ssw'};
         list<String> cashAvailableForPurchaseList1=new list<String>{'ss','qs','ssw'};
        String topMessage21='gink';
     
     Integer endMonth1=6;
        list<String> monthlyCreditCardRecommendList1=new list<String>{'ss','qs','ssw'};
        String notAbleToPayMsg1='vfjh';
         Integer currentMonth1=5;
        list<String> monthlyCreditCardList1=new list<String>{'ss','qs','ssw'};
         list<String> monthlyIncomeList1=new list<String>{'ss','qs','ssw'};
         list<String> monthlyGoalTargetRecommendList1=new list<String>{'ss','qs','ssw'};
         list<String> monthlyTermDebtList1=new list<String>{'ss','qs','ssw'};
         list<String> savingRecommendations1=new list<String>{'ss','qs','ssw'};
        list<String> displayAffordRainyDayFunds1=new list<String>{'ss','qs','ssw'};
         list<String> monthlySavingList1=new list<String>{'ss','qs','ssw'};
       list<String> monthlyExpenseRecommendList1=new list<String>{'ss','qs','ssw'};
           
           
         Decimal interestOnDebt1=4.67;
      Decimal interestOnTermDebt1=5.23;
       Integer offset1=5;
       Integer expenses1=5;
       list<String> monthlyGoals1=new list<String>{'ss','qs','ssw'};
        list<String> yearlyGoals1=new list<String>{'ss','qs','ssw'};
        list<String> monthlyDebts1=new list<String>{'ss','qs','ssw'};
      Integer extraContri1=5;
           
        Integer termDebtBudget1=45;
       Integer termDebtActual1=565;
      
      String avatarName1='sasdnbs';
      
   
       
         list<String> yearlySavings1=new list<String>{'ss','qs','ssw'};
        Integer years1=2033;
      
       list<String> monthlySavingsTrack1=new list<String>{'ss','qs','ssw'};
       
       Integer offset2=44;
         Integer monthOffset1=2;
      list<String> debugObj1=new list<String>{'ss','qs','ssw'};
          
        Decimal nonTermDebtActual1=4.66;
       Decimal nonTermDebtBudget1=4.66;
     list<String> yearlyData1=new list<String>{'ss','qs','ssw'};
       Integer beginningNetWorth1=687;
     
     Integer mustHaveExpBudget1=56;                            
       Integer mustHaveExpActual1=45;
         
      list<String> goalsOnTrack2=new list<String>{'ss','qs','ssw'};                            
        Integer goalItems2=66;
        Integer extraContri2=66;
       list<String> goalsMet2=new list<String>{'ss','qs','ssw'};
        list<String> goalsNotOnTrack2=new list<String>{'ss','qs','ssw'};
            
            Integer goalActual2=667;
        Integer goalBudget2=66;
      
        String redMessage2='ss';
       Decimal score2=5.78;
        String greenMessage2='sfnbsdh';
        Integer months2=2;
      Integer scoreNumber2=67;
      
     Integer desiredExpActual2=66;                           
      Integer desiredExpBudget2=66;
     
      Integer year3=2023;
        Integer month3=12;
        String name3='vsvs';
      Integer shortTermFlag3=6;        
        Decimal endingDebt3=3.5;
       Decimal interestOnDebt3=32.33;
       Integer debtItems3=22;
        Integer beginningDebt3=33;
        Integer longTermFlag3=22;
      
       list<String> yearlySavings4=new list<String>{'ss','qs','ssw'};                            
       list<String> monthlySavingsTrack4=new list<String>{'ss','qs','ssw'};                            
        Integer years4=56;
       Integer offset4=778;
       Integer monthOffset4=66;
        list<String> debugObj4=new list<String>{'ss','qs','ssw'};                            

             
        Test.startTest();
      
       Afford_JsonParser.root r1  = new Afford_JsonParser.root();
      r1.networthAnalysisRecommendList=networthAnalysisRecommendList1;
      r1.downPayment=downPayment1;
                 r1.yearlyListRec=yearlyListRec1;
                 r1.affordResult=affordResult1;
                  r1.downPaymentRec=downPaymentRec1;
                 r1.installmentRec=installmentRec1;
                r1.debtCreatedName=debtCreatedName1;
      
                  r1.networthAnalysisList=networthAnalysisList1;
                 r1.monthlyExpenseList=monthlyExpenseList1;
                 r1.monthlyTermDebtRecommendList=monthlyTermDebtRecommendList1;
                r1.topMessage=topMessage1;
                r1.monthlyGoalTargetList=monthlyGoalTargetList1;
                r1.monthName=monthName1;
                r1.cashAvailableForPurchaseRecommendList=cashAvailableForPurchaseRecommendList1;
                r1.resultMessage=resultMessage1;
                r1.months=months1;
                r1.affordResultDate=affordResultDate1;
                r1.monthlyIncomeRecommendList=monthlyIncomeRecommendList1;
                r1.displayMonthList=displayMonthList1;
                r1.yearlyList=yearlyList1;
                 r1.buynowMsg=buynowMsg1;
                r1.jsonData=jsonData1;
                     r1.displayMonthRecommendList=displayMonthRecommendList1;
                     r1.currentYear=currentYear1;
                     r1.installment=installment1;
                     r1.endYear=endYear1;
                     r1.monthlySavingRecommendList=monthlySavingRecommendList1;
                     r1.cashAvailableForPurchaseList=cashAvailableForPurchaseList1;
                     r1.topMessage2=topMessage21;
                      r1.endMonth=endMonth1;
        r1.monthlyCreditCardRecommendList=monthlyCreditCardRecommendList1;
         r1.notAbleToPayMsg=notAbleToPayMsg1;
       r1.currentMonth=currentMonth1;
        r1.monthlyCreditCardList=monthlyCreditCardList1;
        r1.monthlyIncomeList=monthlyIncomeList1;
         r1.monthlyGoalTargetRecommendList=monthlyGoalTargetRecommendList1;
         r1.monthlyTermDebtList=monthlyTermDebtList1;
         r1.savingRecommendations=savingRecommendations1;
        r1.displayAffordRainyDayFunds=displayAffordRainyDayFunds1;
         r1.monthlySavingList=monthlySavingList1;
         r1.monthlyExpenseRecommendList=monthlyExpenseRecommendList1;
                     
       Afford_JsonParser.yearlyData p1  = new Afford_JsonParser.yearlyData();
         p1.interestOnDebt=interestOnDebt1;
       p1.interestOnTermDebt=interestOnTermDebt1;
        p1.offset=offset1;
        p1.expenses=expenses1;
       p1.monthlyGoals=monthlyGoals1;
        p1.yearlyGoals=yearlyGoals1;
       p1.monthlyDebts=monthlyDebts1;
        p1.extraContri=extraContri1;
      Afford_JsonParser.termDebt s1  = new Afford_JsonParser.termDebt();
       s1.termDebtBudget=termDebtBudget1;
       s1.termDebtActual=termDebtActual1;
      Afford_JsonParser.simulationData t1  = new Afford_JsonParser.simulationData();
     t1.avatarName=avatarName1;
       Afford_JsonParser.profileData u1  = new Afford_JsonParser.profileData();
      
      u1.yearlySavings=yearlySavings1;
      u1.years=years1;
     u1.monthlySavingsTrack=monthlySavingsTrack1;
        u1.offset=offset2;
       u1.monthOffset=monthOffset1;
        u1.debugObj=debugObj1;
       Afford_JsonParser.nonTermDebt y1  = new Afford_JsonParser.nonTermDebt();
      y1.nonTermDebtActual=nonTermDebtActual1;
    y1.nonTermDebtBudget= nonTermDebtBudget1;
       Afford_JsonParser.netWorthAnalysis z1  = new Afford_JsonParser.netWorthAnalysis();
       z1.yearlyData=yearlyData1;
      z1.beginningNetWorth=beginningNetWorth1;
       Afford_JsonParser.mustHaveExp  a1= new Afford_JsonParser.mustHaveExp();  
      a1.mustHaveExpBudget=mustHaveExpBudget1;                             
        a1.mustHaveExpActual=mustHaveExpActual1; 
       Afford_JsonParser.goalAnalysis  b1= new Afford_JsonParser.goalAnalysis();
          b1.goalsOnTrack=goalsOnTrack2;                            
        b1.goalItems=goalItems2;
        b1.extraContri=extraContri2;
       b1.goalsMet=goalsMet2;
        b1.goalsNotOnTrack=goalsNotOnTrack2;
      Afford_JsonParser.goal  c1= new Afford_JsonParser.goal();
        c1.goalActual=goalActual2;
     c1.goalBudget=goalBudget2;
       Afford_JsonParser.financialHealthAnalysis  d1= new Afford_JsonParser.financialHealthAnalysis();
         d1.redMessage=redMessage2;
        d1.score=score2;
        d1.greenMessage=greenMessage2;
        d1.months=months2;
        d1.scoreNumber=scoreNumber2;
      Afford_JsonParser.desiredExp e1= new Afford_JsonParser.desiredExp();
     e1.desiredExpActual=desiredExpActual2;                            
      e1.desiredExpBudget=desiredExpBudget2;
       Afford_JsonParser.debtPayed f1= new Afford_JsonParser.debtPayed();
       f1.year=year3;
       f1.month=month3;
       f1.name=name3;
       Afford_JsonParser.debtAnalysis g1= new Afford_JsonParser.debtAnalysis();
       g1.shortTermFlag=shortTermFlag3;        
       g1.endingDebt=endingDebt3;
       g1.interestOnDebt=interestOnDebt3;
      g1.debtItems=debtItems3;
       g1.beginningDebt=beginningDebt3;
       g1.longTermFlag=longTermFlag3;
      Afford_JsonParser.avatarData h1= new Afford_JsonParser.avatarData();
        h1.yearlySavings=yearlySavings4;
        h1.monthlySavingsTrack=monthlySavingsTrack4;
       h1.years=years4;
       h1.offset=offset4;
       h1.monthOffset=monthOffset4;
        h1.debugObj=debugObj4;

        
      
   Test.stopTest();   
      
    
  }
    
}